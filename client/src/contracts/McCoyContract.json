{
  "contractName": "McCoyContract",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenURI",
          "type": "string"
        },
        {
          "name": "mccTokenId",
          "type": "uint256"
        }
      ],
      "name": "createMcCoyToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xfa09c230"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252601181527f4d63436f7920446f6e6f7220546f6b656e0000000000000000000000000000006020808301919091528251808401909352600383527f4d4343000000000000000000000000000000000000000000000000000000000090830152908181620000b17f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001e9810204565b620000e57f80ac58cd00000000000000000000000000000000000000000000000000000000640100000000620001e9810204565b620001197f780e9d6300000000000000000000000000000000000000000000000000000000640100000000620001e9810204565b81516200012e9060099060208501906200033b565b5080516200014490600a9060208401906200033b565b50620001797f5b5e139f00000000000000000000000000000000000000000000000000000000640100000000620001e9810204565b50505050620001973362000256640100000000026401000000009004565b600d8054600160a060020a031916331790819055604051600160a060020a0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620003e0565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200021957600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b62000271600c82640100000000620014ea620002a882021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a0381161515620002be57600080fd5b620002d3828264010000000062000303810204565b15620002de57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156200031b57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037e57805160ff1916838001178555620003ae565b82800160010185558215620003ae579182015b82811115620003ae57825182559160200191906001019062000391565b50620003bc929150620003c0565b5090565b620003dd91905b80821115620003bc5760008155600101620003c7565b90565b61184980620003f06000396000f3fe608060405234801561001057600080fd5b50600436106101b5576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b11610100578063aa271e1a116100a9578063e985e9c511610083578063e985e9c51461060a578063f2fde38b14610645578063fa09c23014610678576101b5565b8063aa271e1a146104e7578063b88d4fde1461051a578063c87b56dd146105ed576101b5565b8063983b2d56116100da578063983b2d561461047157806398650275146104a4578063a22cb465146104ac576101b5565b80638da5cb5b146104595780638f32d59b1461046157806395d89b4114610469576101b5565b80632f745c59116101625780636352211e1161013c5780636352211e1461040157806370a082311461041e578063715018a614610451576101b5565b80632f745c591461036857806342842e0e146103a15780634f6ccce7146103e4576101b5565b8063095ea7b311610193578063095ea7b3146102d057806318160ddd1461030b57806323b872dd14610325576101b5565b806301ffc9a7146101ba57806306fdde031461020d578063081812fc1461028a575b600080fd5b6101f9600480360360208110156101d057600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610720565b604080519115158252519081900360200190f35b610215610757565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024f578181015183820152602001610237565b50505050905090810190601f16801561027c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a7600480360360208110156102a057600080fd5b50356107ee565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610309600480360360408110156102e657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561082d565b005b61031361090a565b60408051918252519081900360200190f35b6103096004803603606081101561033b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610910565b6103136004803603604081101561037e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610935565b610309600480360360608110156103b757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561098f565b610313600480360360208110156103fa57600080fd5b50356109ab565b6102a76004803603602081101561041757600080fd5b50356109e0565b6103136004803603602081101561043457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a17565b610309610a69565b6102a7610ae0565b6101f9610afc565b610215610b1a565b6103096004803603602081101561048757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610b7b565b610309610b9b565b610309600480360360408110156104c257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515610ba6565b6101f9600480360360208110156104fd57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610c44565b6103096004803603608081101561053057600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561057857600080fd5b82018360208201111561058a57600080fd5b803590602001918460018302840111640100000000831117156105ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c57945050505050565b6102156004803603602081101561060357600080fd5b5035610c7f565b6101f96004803603604081101561062057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610d34565b6103096004803603602081101561065b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d6f565b6101f96004803603604081101561068e57600080fd5b8101906020810181356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460018302840111640100000000831117156106dd57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610d8b915050565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b505050505090505b90565b60006107f982610dbd565b151561080457600080fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610838826109e0565b905073ffffffffffffffffffffffffffffffffffffffff838116908216141561086057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061088957506108898133610d34565b151561089457600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61091a3382610de7565b151561092557600080fd5b610930838383610e7a565b505050565b600061094083610a17565b821061094b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020526040902080548390811061097c57fe5b9060005260206000200154905092915050565b6109308383836020604051908101604052806000815250610c57565b60006109b561090a565b82106109c057600080fd5b60078054839081106109ce57fe5b90600052602060002001549050919050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff16801515610a1157600080fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82161515610a3b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610a1190610e99565b610a71610afc565b1515610a7c57600080fd5b600d5460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600d805473ffffffffffffffffffffffffffffffffffffffff19169055565b600d5473ffffffffffffffffffffffffffffffffffffffff1690565b600d5473ffffffffffffffffffffffffffffffffffffffff16331490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107e35780601f106107b8576101008083540402835291602001916107e3565b610b8433610c44565b1515610b8f57600080fd5b610b9881610e9d565b50565b610ba433610ef2565b565b73ffffffffffffffffffffffffffffffffffffffff8216331415610bc957600080fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610a11600c8363ffffffff610f4716565b610c62848484610910565b610c6e84848484610f98565b1515610c7957600080fd5b50505050565b6060610c8a82610dbd565b1515610c9557600080fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b610d77610afc565b1515610d8257600080fd5b610b9881611131565b6000610d95610afc565b1515610da057600080fd5b610daa33836111d6565b610db482846111f7565b50600192915050565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b600080610df3836109e0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e6257508373ffffffffffffffffffffffffffffffffffffffff16610e4a846107ee565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e725750610e728185610d34565b949350505050565b610e8583838361122a565b610e8f8382611367565b610930828261149f565b5490565b610eae600c8263ffffffff6114ea16565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610f03600c8263ffffffff61155216565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600073ffffffffffffffffffffffffffffffffffffffff82161515610f6b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b6000610fb98473ffffffffffffffffffffffffffffffffffffffff166115b8565b1515610fc757506001610e72565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152336004820181815273ffffffffffffffffffffffffffffffffffffffff888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561106757818101518382015260200161104f565b50505050905090810190601f1680156110945780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b505050506040513d60208110156110e057600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116151561115357600080fd5b600d5460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600d805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6111e082826115c0565b6111ea828261149f565b6111f381611697565b5050565b61120082610dbd565b151561120b57600080fd5b6000828152600b60209081526040909120825161093092840190611765565b8273ffffffffffffffffffffffffffffffffffffffff1661124a826109e0565b73ffffffffffffffffffffffffffffffffffffffff161461126a57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561128c57600080fd5b611295816116db565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090206112c390611730565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090206112f190611747565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604081205461139e90600163ffffffff61175016565b6000838152600660205260409020549091508082146114625773ffffffffffffffffffffffffffffffffffffffff841660009081526005602052604081208054849081106113e857fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561144257fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff841660009081526005602052604090208054906114989060001983016117e3565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b73ffffffffffffffffffffffffffffffffffffffff8116151561150c57600080fd5b6115168282610f47565b1561152057600080fd5b73ffffffffffffffffffffffffffffffffffffffff16600090815260209190915260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff8116151561157457600080fd5b61157e8282610f47565b151561158957600080fd5b73ffffffffffffffffffffffffffffffffffffffff16600090815260209190915260409020805460ff19169055565b6000903b1190565b73ffffffffffffffffffffffffffffffffffffffff821615156115e257600080fd5b6115eb81610dbd565b156115f557600080fd5b6000818152600160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff871690811790915583526003909152902061164e90611747565b604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610b98576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b805461174390600163ffffffff61175016565b9055565b80546001019055565b60008282111561175f57600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106117a657805160ff19168380011785556117d3565b828001600101855582156117d3579182015b828111156117d35782518255916020019190600101906117b8565b506117df929150611803565b5090565b815481835581811115610930576000838152602090206109309181019083015b6107eb91905b808211156117df576000815560010161180956fea165627a7a72305820c580da92fa7a568e6969968e596e684d041da78b26ba91457b2d4b0a37187a6d0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b5576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b11610100578063aa271e1a116100a9578063e985e9c511610083578063e985e9c51461060a578063f2fde38b14610645578063fa09c23014610678576101b5565b8063aa271e1a146104e7578063b88d4fde1461051a578063c87b56dd146105ed576101b5565b8063983b2d56116100da578063983b2d561461047157806398650275146104a4578063a22cb465146104ac576101b5565b80638da5cb5b146104595780638f32d59b1461046157806395d89b4114610469576101b5565b80632f745c59116101625780636352211e1161013c5780636352211e1461040157806370a082311461041e578063715018a614610451576101b5565b80632f745c591461036857806342842e0e146103a15780634f6ccce7146103e4576101b5565b8063095ea7b311610193578063095ea7b3146102d057806318160ddd1461030b57806323b872dd14610325576101b5565b806301ffc9a7146101ba57806306fdde031461020d578063081812fc1461028a575b600080fd5b6101f9600480360360208110156101d057600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610720565b604080519115158252519081900360200190f35b610215610757565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024f578181015183820152602001610237565b50505050905090810190601f16801561027c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a7600480360360208110156102a057600080fd5b50356107ee565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610309600480360360408110156102e657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561082d565b005b61031361090a565b60408051918252519081900360200190f35b6103096004803603606081101561033b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610910565b6103136004803603604081101561037e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610935565b610309600480360360608110156103b757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561098f565b610313600480360360208110156103fa57600080fd5b50356109ab565b6102a76004803603602081101561041757600080fd5b50356109e0565b6103136004803603602081101561043457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a17565b610309610a69565b6102a7610ae0565b6101f9610afc565b610215610b1a565b6103096004803603602081101561048757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610b7b565b610309610b9b565b610309600480360360408110156104c257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515610ba6565b6101f9600480360360208110156104fd57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610c44565b6103096004803603608081101561053057600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561057857600080fd5b82018360208201111561058a57600080fd5b803590602001918460018302840111640100000000831117156105ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c57945050505050565b6102156004803603602081101561060357600080fd5b5035610c7f565b6101f96004803603604081101561062057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610d34565b6103096004803603602081101561065b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d6f565b6101f96004803603604081101561068e57600080fd5b8101906020810181356401000000008111156106a957600080fd5b8201836020820111156106bb57600080fd5b803590602001918460018302840111640100000000831117156106dd57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610d8b915050565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b505050505090505b90565b60006107f982610dbd565b151561080457600080fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610838826109e0565b905073ffffffffffffffffffffffffffffffffffffffff838116908216141561086057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061088957506108898133610d34565b151561089457600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61091a3382610de7565b151561092557600080fd5b610930838383610e7a565b505050565b600061094083610a17565b821061094b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020526040902080548390811061097c57fe5b9060005260206000200154905092915050565b6109308383836020604051908101604052806000815250610c57565b60006109b561090a565b82106109c057600080fd5b60078054839081106109ce57fe5b90600052602060002001549050919050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff16801515610a1157600080fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82161515610a3b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610a1190610e99565b610a71610afc565b1515610a7c57600080fd5b600d5460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600d805473ffffffffffffffffffffffffffffffffffffffff19169055565b600d5473ffffffffffffffffffffffffffffffffffffffff1690565b600d5473ffffffffffffffffffffffffffffffffffffffff16331490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107e35780601f106107b8576101008083540402835291602001916107e3565b610b8433610c44565b1515610b8f57600080fd5b610b9881610e9d565b50565b610ba433610ef2565b565b73ffffffffffffffffffffffffffffffffffffffff8216331415610bc957600080fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610a11600c8363ffffffff610f4716565b610c62848484610910565b610c6e84848484610f98565b1515610c7957600080fd5b50505050565b6060610c8a82610dbd565b1515610c9557600080fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b610d77610afc565b1515610d8257600080fd5b610b9881611131565b6000610d95610afc565b1515610da057600080fd5b610daa33836111d6565b610db482846111f7565b50600192915050565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b600080610df3836109e0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e6257508373ffffffffffffffffffffffffffffffffffffffff16610e4a846107ee565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e725750610e728185610d34565b949350505050565b610e8583838361122a565b610e8f8382611367565b610930828261149f565b5490565b610eae600c8263ffffffff6114ea16565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610f03600c8263ffffffff61155216565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600073ffffffffffffffffffffffffffffffffffffffff82161515610f6b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b6000610fb98473ffffffffffffffffffffffffffffffffffffffff166115b8565b1515610fc757506001610e72565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152336004820181815273ffffffffffffffffffffffffffffffffffffffff888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561106757818101518382015260200161104f565b50505050905090810190601f1680156110945780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b505050506040513d60208110156110e057600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116151561115357600080fd5b600d5460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600d805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6111e082826115c0565b6111ea828261149f565b6111f381611697565b5050565b61120082610dbd565b151561120b57600080fd5b6000828152600b60209081526040909120825161093092840190611765565b8273ffffffffffffffffffffffffffffffffffffffff1661124a826109e0565b73ffffffffffffffffffffffffffffffffffffffff161461126a57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561128c57600080fd5b611295816116db565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090206112c390611730565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090206112f190611747565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604081205461139e90600163ffffffff61175016565b6000838152600660205260409020549091508082146114625773ffffffffffffffffffffffffffffffffffffffff841660009081526005602052604081208054849081106113e857fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561144257fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff841660009081526005602052604090208054906114989060001983016117e3565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b73ffffffffffffffffffffffffffffffffffffffff8116151561150c57600080fd5b6115168282610f47565b1561152057600080fd5b73ffffffffffffffffffffffffffffffffffffffff16600090815260209190915260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff8116151561157457600080fd5b61157e8282610f47565b151561158957600080fd5b73ffffffffffffffffffffffffffffffffffffffff16600090815260209190915260409020805460ff19169055565b6000903b1190565b73ffffffffffffffffffffffffffffffffffffffff821615156115e257600080fd5b6115eb81610dbd565b156115f557600080fd5b6000818152600160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff871690811790915583526003909152902061164e90611747565b604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610b98576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b805461174390600163ffffffff61175016565b9055565b80546001019055565b60008282111561175f57600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106117a657805160ff19168380011785556117d3565b828001600101855582156117d3579182015b828111156117d35782518255916020019190600101906117b8565b506117df929150611803565b5090565b815481835581811115610930576000838152602090206109309181019083015b6107eb91905b808211156117df576000815560010161180956fea165627a7a72305820c580da92fa7a568e6969968e596e684d041da78b26ba91457b2d4b0a37187a6d0029",
  "sourceMap": "230:657:0:-;;;381:146;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;452:155:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:40:5;658:20;639:18;;;;:40;:::i;:::-;1970::9;1989:20;1970:18;;;;:40;:::i;:::-;1227:51:10;1246:31;1227:18;;;;:51;:::i;:::-;737:12:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;759:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;863:49:12;882:29;863:18;;;;:49;:::i;:::-;665:254;;452:155:11;;275:22:3;286:10;275;;;:22;;;:::i;:::-;515:6:8;:19;;-1:-1:-1;;;;;;515:19:8;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:8;;;;;515;;549:40;;515:6;;549:40;230:657:0;;989:158:5;1064:25;;;;;;1056:34;;;;;;1100:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1100:40:5;1136:4;1100:40;;;989:158::o;685:119:3:-;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;259:181:2:-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;230:657:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;230:657:0;;;-1:-1:-1;230:657:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "230:657:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:657:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:133:5;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1023:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1023:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:151:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:151:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;3196:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3196:292:9;;;;;;;;;:::i;:::-;;1992:94:10;;;:::i;:::-;;;;;;;;;;;;;;;;5329:180:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5329:180:9;;;;;;;;;;;;;;;;;;:::i;1658:182:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1658:182:10;;;;;;;;;:::i;6142:132:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6142:132:9;;;;;;;;;;;;;;;;;;:::i;2423:148:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2423:148:10;;:::i;2598:177:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2598:177:9;;:::i;2220:160::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2220:160:9;;;;:::i;1423:137:8:-;;;:::i;659:77::-;;;:::i;979:90::-;;;:::i;1214:87:12:-;;;:::i;508:90:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:3;;;;:::i;604:75::-;;;:::i;4216:213:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4216:213:9;;;;;;;;;;;:::i;395:107:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:3;;;;:::i;6979:211:9:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6979:211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6979:211:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6979:211:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6979:211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6979:211:9;;-1:-1:-1;6979:211:9;;-1:-1:-1;;;;;6979:211:9:i;1500:151:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1500:151:12;;:::i;4750:145:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4750:145:9;;;;;;;;;;;:::i;1731:107:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:8;;;;:::i;540:336:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;540:336:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;540:336:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;540:336:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;540:336:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;540:336:0;;-1:-1:-1;;540:336:0;;;-1:-1:-1;540:336:0;;-1:-1:-1;;540:336:0:i;777:133:5:-;870:33;;847:4;870:33;;;;;;;;;;;;;;777:133::o;1023:83:12:-;1094:5;1087:12;;;;;;;;-1:-1:-1;;1087:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:13;;1087:12;;1094:5;;1087:12;;1094:5;1087:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:83;;:::o;3773:151:9:-;3832:7;3859:16;3867:7;3859;:16::i;:::-;3851:25;;;;;;;;-1:-1:-1;3893:24:9;;;;:15;:24;;;;;;;;;3773:151::o;3196:292::-;3259:13;3275:16;3283:7;3275;:16::i;:::-;3259:32;-1:-1:-1;3309:11:9;;;;;;;;;3301:20;;;;;;3339:10;:19;;;;;:58;;;3362:35;3379:5;3386:10;3362:16;:35::i;:::-;3331:67;;;;;;;;3409:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3409:29:9;;;;;;;;;;;3453:28;;3409:24;;3453:28;;;;;;;3196:292;;;:::o;1992:94:10:-;2062:10;:17;1992:94;:::o;5329:180:9:-;5419:39;5438:10;5450:7;5419:18;:39::i;:::-;5411:48;;;;;;;;5470:32;5484:4;5490:2;5494:7;5470:13;:32::i;:::-;5329:180;;;:::o;1658:182:10:-;1738:7;1773:16;1783:5;1773:9;:16::i;:::-;1765:24;;1757:33;;;;;;1807:19;;;;;;;:12;:19;;;;;:26;;1827:5;;1807:26;;;;;;;;;;;;;;1800:33;;1658:182;;;;:::o;6142:132:9:-;6228:39;6245:4;6251:2;6255:7;6228:39;;;;;;;;;;;;;:16;:39::i;2423:148:10:-;2481:7;2516:13;:11;:13::i;:::-;2508:21;;2500:30;;;;;;2547:10;:17;;2558:5;;2547:17;;;;;;;;;;;;;;2540:24;;2423:148;;;:::o;2598:177:9:-;2653:7;2688:20;;;:11;:20;;;;;;;;2726:19;;;2718:28;;;;;;2763:5;2598:177;-1:-1:-1;;2598:177:9:o;2220:160::-;2275:7;2302:19;;;;;2294:28;;;;;;2339:24;;;;;;;:17;:24;;;;;:34;;:32;:34::i;1423:137:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1505:6;;1484:40;;1521:1;;1484:40;1505:6;;1484:40;;1521:1;;1484:40;1534:6;:19;;-1:-1:-1;;1534:19:8;;;1423:137::o;659:77::-;723:6;;;;659:77;:::o;979:90::-;1056:6;;;;1042:10;:20;;979:90::o;1214:87:12:-;1287:7;1280:14;;;;;;;;-1:-1:-1;;1280:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:13;;1280:14;;1287:7;;1280:14;;1287:7;1280:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:3;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;4216:213:9:-;4295:16;;;4301:10;4295:16;;4287:25;;;;;;4341:10;4322:30;;;;:18;:30;;;;;;;;;:34;;;;;;;;;;;;:45;;-1:-1:-1;;4322:45:9;;;;;;;;;;4382:40;;;;;;;4322:34;;4341:10;4382:40;;;;;;;;;;;4216:213;;:::o;395:107:3:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;6979:211:9:-;7085:31;7098:4;7104:2;7108:7;7085:12;:31::i;:::-;7134:48;7157:4;7163:2;7167:7;7176:5;7134:22;:48::i;:::-;7126:57;;;;;;;;6979:211;;;;:::o;1500:151:12:-;1558:13;1591:16;1599:7;1591;:16::i;:::-;1583:25;;;;;;;;1625:19;;;;:10;:19;;;;;;;;;1618:26;;;;;;-1:-1:-1;;1618:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:19;;1618:26;;1625:19;1618:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:151;;;:::o;4750:145:9:-;4853:25;;;;4830:4;4853:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4750:145::o;1731:107:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;540:336:0:-;698:4;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;751:29:0;757:10;769;751:5;:29::i;:::-;798:34;811:10;823:8;798:12;:34::i;:::-;-1:-1:-1;857:4:0;540:336;;;;:::o;7384:152:9:-;7441:4;7473:20;;;:11;:20;;;;;;;;7510:19;;;7384:152::o;7896:246::-;7981:4;7997:13;8013:16;8021:7;8013;:16::i;:::-;7997:32;;8058:5;8047:16;;:7;:16;;;:51;;;;8091:7;8067:31;;:20;8079:7;8067:11;:20::i;:::-;:31;;;8047:51;:87;;;;8102:32;8119:5;8126:7;8102:16;:32::i;:::-;8039:96;7896:246;-1:-1:-1;;;;7896:246:9:o;2946:239:10:-;3031:38;3051:4;3057:2;3061:7;3031:19;:38::i;:::-;3080:47;3113:4;3119:7;3080:32;:47::i;:::-;3138:40;3166:2;3170:7;3138:27;:40::i;1062:112:4:-;1153:14;;1062:112::o;685:119:3:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;;;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;;;;;;;;;;810:127;:::o;786:162:2:-;858:4;882:21;;;;;874:30;;;;;;-1:-1:-1;921:20:2;;:11;:20;;;;;;;;;;;;;;;786:162::o;10734:347:9:-;10855:4;10880:15;:2;:13;;;:15::i;:::-;10879:16;10875:58;;;-1:-1:-1;10918:4:9;10911:11;;10875:58;10959:70;;;;;10996:10;10959:70;;;;;;:36;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:13;;10959:36;;;;;;10996:10;;11008:4;;11014:7;;11023:5;;10959:70;;;;;;;;;;;10943:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10959:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10959:70:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10959:70:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10959:70:9;11047:26;;11057:16;11047:26;;-1:-1:-1;;10734:347:9;;;;;;:::o;1982:183:8:-;2055:22;;;;;2047:31;;;;;;2114:6;;2093:38;;;;;;;2114:6;;2093:38;;2114:6;;2093:38;2141:6;:17;;-1:-1:-1;;2141:17:8;;;;;;;;;;;;1982:183::o;3440:196:10:-;3503:24;3515:2;3519:7;3503:11;:24::i;:::-;3538:40;3566:2;3570:7;3538:27;:40::i;:::-;3589;3621:7;3589:31;:40::i;:::-;3440:196;;:::o;1888:144:12:-;1973:16;1981:7;1973;:16::i;:::-;1965:25;;;;;;;;2000:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;9844:362:9:-;9957:4;9937:24;;:16;9945:7;9937;:16::i;:::-;:24;;;9929:33;;;;;;9980:16;;;;;9972:25;;;;;;10008:23;10023:7;10008:14;:23::i;:::-;10042;;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;10087:21;;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10131:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;10131:25:9;;;;;;;;;;;10172:27;;10131:20;;10172:27;;;;;;;9844:362;;;:::o;6048:1128:10:-;6335:18;;;6310:22;6335:18;;;:12;:18;;;;;:25;:32;;6365:1;6335:32;:29;:32;:::i;:::-;6377:18;6398:26;;;:17;:26;;;;;;6310:57;;-1:-1:-1;6528:28:10;;;6524:323;;6594:18;;;6572:19;6594:18;;;:12;:18;;;;;:34;;6613:14;;6594:34;;;;;;;;;;;;;;6572:56;;6676:11;6643:12;:18;6656:4;6643:18;;;;;;;;;;;;;;;6662:10;6643:30;;;;;;;;;;;;;;;;;;;;;:44;;;;6759:30;;;:17;:30;;;;;:43;;;6524:323;6933:18;;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6933:27:10;;;:::i;:::-;;6048:1128;;;;:::o;4894:183::-;5007:16;;;;;;;;:12;:16;;;;;;;;:23;;4978:26;;;:17;:26;;;;;:52;;;5040:16;;;39:1:-1;23:18;;45:23;;5040:30:10;;;;;;;;4894:183::o;259:181:2:-;335:21;;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;406:20;;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;514:184::-;593:21;;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;663:20;;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:2;;;514:184::o;463:616:17:-;523:4;1026:20;;1064:8;;463:616::o;8385:259:9:-;8456:16;;;;;8448:25;;;;;;8492:16;8500:7;8492;:16::i;:::-;8491:17;8483:26;;;;;;8520:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;8520:25:9;;;;;;;;;;8555:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;8604;;8629:7;;8604:33;;;;8621:1;;8604:33;;8621:1;;8604:33;8385:259;;:::o;5272:161:10:-;5375:10;:17;;5348:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5402:24:10;;;;;;;5272:161::o;11242:171:9:-;11341:1;11305:24;;;:15;:24;;;;;;:38;:24;:38;11301:106;;11394:1;11359:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11359:37:9;;;11242:171::o;1275:108:4:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;1180:89::-;1243:19;;1261:1;1243:19;;;1180:89::o;1211:145:7:-;1269:7;1296:6;;;;1288:15;;;;;;-1:-1:-1;1325:5:7;;;1211:145::o;230:657:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;230:657:0;;;-1:-1:-1;230:657:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.2;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract McCoyContract is ERC721Full,MinterRole, Ownable {\n     //implement Counters. ..getting error\n    //using Counter for Counter.Counter;\n   \n    constructor() public\n        // string memory name,\n        // string memory symbol    \n        ERC721Full(\"McCoy Donor Token\", \"MCC\")\n        { }\n\n           function createMcCoyToken(\n                string memory tokenURI, uint256 mccTokenId\n            )\n                public onlyOwner\n                returns (bool)\n            {\n                \n                _mint(msg.sender, mccTokenId);\n                _setTokenURI(mccTokenId, tokenURI);\n                return true;\n            }\n        \n}",
  "sourcePath": "/Users/michaelchan/Desktop/whitney-mccoy-openlaw/contracts/McCoy.sol",
  "ast": {
    "absolutePath": "/Users/michaelchan/Desktop/whitney-mccoy-openlaw/contracts/McCoy.sol",
    "exportedSymbols": {
      "McCoyContract": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 1550,
        "src": "25:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 299,
        "src": "95:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 646,
        "src": "165:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1549,
              "src": "256:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1549",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "256:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 298,
              "src": "267:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$298",
                "typeString": "contract MinterRole"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "267:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 645,
              "src": "279:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$645",
                "typeString": "contract Ownable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "279:7:0"
          }
        ],
        "contractDependencies": [
          298,
          398,
          408,
          645,
          1190,
          1525,
          1549,
          1676,
          1779,
          1806,
          1829
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44,
          645,
          298,
          1549,
          1676,
          1829,
          1525,
          1806,
          1190,
          1779,
          398,
          408
        ],
        "name": "McCoyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "524:3:0",
              "statements": []
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d63436f7920446f6e6f7220546f6b656e",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "488:19:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_727831a254e3f34bf0693c51b6d83be81578bb97acb29d4f205b260e7855a0f0",
                      "typeString": "literal_string \"McCoy Donor Token\""
                    },
                    "value": "McCoy Donor Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d4343",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "509:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e9192ce75831c4d0af8b9a1c447c65927914ba390dcf32083b28c40b54cd47d6",
                      "typeString": "literal_string \"MCC\""
                    },
                    "value": "MCC"
                  }
                ],
                "id": 15,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1549,
                  "src": "477:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1549_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "477:38:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:0"
            },
            "scope": 44,
            "src": "381:146:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "716:160:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1879,
                          "src": "757:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "757:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "mccTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "769:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1332
                      ],
                      "referencedDeclaration": 1332,
                      "src": "751:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "751:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "751:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "mccTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "811:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "823:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 35,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1645,
                      "src": "798:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "798:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "857:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 28,
                  "id": 41,
                  "nodeType": "Return",
                  "src": "850:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 579,
                  "src": "663:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "663:9:0"
              }
            ],
            "name": "createMcCoyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "583:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "mccTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "607:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "565:74:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "698:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "697:6:0"
            },
            "scope": 44,
            "src": "540:336:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 45,
        "src": "230:657:0"
      }
    ],
    "src": "0:887:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/michaelchan/Desktop/whitney-mccoy-openlaw/contracts/McCoy.sol",
    "exportedSymbols": {
      "McCoyContract": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 1550,
        "src": "25:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 299,
        "src": "95:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 646,
        "src": "165:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1549,
              "src": "256:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1549",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "256:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 298,
              "src": "267:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$298",
                "typeString": "contract MinterRole"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "267:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 645,
              "src": "279:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$645",
                "typeString": "contract Ownable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "279:7:0"
          }
        ],
        "contractDependencies": [
          298,
          398,
          408,
          645,
          1190,
          1525,
          1549,
          1676,
          1779,
          1806,
          1829
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44,
          645,
          298,
          1549,
          1676,
          1829,
          1525,
          1806,
          1190,
          1779,
          398,
          408
        ],
        "name": "McCoyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "524:3:0",
              "statements": []
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d63436f7920446f6e6f7220546f6b656e",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "488:19:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_727831a254e3f34bf0693c51b6d83be81578bb97acb29d4f205b260e7855a0f0",
                      "typeString": "literal_string \"McCoy Donor Token\""
                    },
                    "value": "McCoy Donor Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d4343",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "509:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e9192ce75831c4d0af8b9a1c447c65927914ba390dcf32083b28c40b54cd47d6",
                      "typeString": "literal_string \"MCC\""
                    },
                    "value": "MCC"
                  }
                ],
                "id": 15,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1549,
                  "src": "477:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1549_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "477:38:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:0"
            },
            "scope": 44,
            "src": "381:146:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "716:160:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1879,
                          "src": "757:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "757:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "mccTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "769:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1332
                      ],
                      "referencedDeclaration": 1332,
                      "src": "751:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "751:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "751:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "mccTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "811:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "823:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 35,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1645,
                      "src": "798:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "798:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "857:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 28,
                  "id": 41,
                  "nodeType": "Return",
                  "src": "850:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 579,
                  "src": "663:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "663:9:0"
              }
            ],
            "name": "createMcCoyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "583:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "mccTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "607:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "565:74:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "698:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "697:6:0"
            },
            "scope": 44,
            "src": "540:336:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 45,
        "src": "230:657:0"
      }
    ],
    "src": "0:887:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0xD70e079DaE4dc3c40519fBe568bC3FB70E1dD87e",
      "transactionHash": "0x25a80722d1091765368374f0893d703bc6c8b5383f6c2b5069317ec3927ad2d2"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-05-03T17:50:15.742Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}