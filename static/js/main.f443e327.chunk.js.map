{"version":3,"sources":["components/mccoy-film-crop.png","components/MenuBar.js","utils/getWeb3.js","components/Header.js","components/TopHeader.js","components/ImageMcCoy.js","components/TransferToken.js","pages/TransferDonorPage.js","components/tokenCards.js","pages/LandingPage.js","components/MintToken.js","components/AllowSpender.js","pages/ArtistDashboardPage.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuBar","state","handleItemClick","e","_ref","name","_this","setState","activeItem","this","react_default","a","createElement","Menu","Item","active","onClick","as","NavLink","to","Component","getWeb3","Promise","Object","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","web3","_web","provider","_web2","wrap","_context","prev","next","window","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","_x","_x2","apply","arguments","Header","instance","undefined","contractAddress","tokenName","tokenSymbol","accounts","contract","componentDidMount","networkId","deployedNetwork","sent","eth","getAccounts","net","getId","McCoyContract","networks","Contract","abi","address","options","methods","call","from","error","symbol","totalSupply","result","allTokens","toString","alert","className","TopHeader","src","alt","ImageMcCoy","Image","require","href","target","TransferTokenForm","tokenId","currentEthereumAddress","newEthereumAddress","loading","errorMessage","successMessage","transferToken","event","preventDefault","safeTransferFrom","send","message","_this2","Segment","color","Form","onSubmit","success","Message","header","content","Field","Input","placeholder","value","onChange","required","Button","type","primary","TransferDonorPage","Container","TransferToken","TokenCards","myTokenList","tokenItems","getTotalSupply","updateCards","_callee2","i","tokenSupply","ownerAddress","tokenMetadata","listItems","_context2","tokenByIndex","ownerOf","tokenURI","push","key","tokenid","tokenuri","owneraddress","map","tokens","Card","raised","Content","textAlign","Description","basic","rel","_callee3","_context3","Group","itemsPerRow","LandingPage","tokenCards","MintToken","metaData","mintToken","createMcCoyToken","AllowSpender","spenderEthereumAddress","allowTokenSpender","approve","ArtistDashboardPage","components_MintToken","Divider","hidden","components_AllowSpender","NoMatch","App","components_TopHeader","MenuBar_MenuBar","Grid","columns","divided","Row","Column","width","components_ImageMcCoy","components_Header","react_router","exact","path","component","withRouter","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f443e327.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mccoy-film-crop.da4d5c5e.png\";","import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { NavLink} from 'react-router-dom';\n\nexport default class MenuBar extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu>\n\n        <Menu.Item\n          name='landingPage'\n          active={activeItem === 'landingPage'}\n          onClick={this.handleItemClick}\n          as = {NavLink}\n          to = '/'\n        >\n        Token Tracker\n        </Menu.Item>\n\n        <Menu.Item\n          name='transferDonor'\n          active={activeItem === 'transferDonor'}\n          onClick={this.handleItemClick}\n          as = {NavLink}\n          to = '/Transfer-Donor' \n        >\n        Transfer Donor Token\n        </Menu.Item>\n\n      {/* JSX Comment  \n       <Menu.Item\n          name='artistDashboard'\n          active={activeItem === 'artistDashboard'}\n          onClick={this.handleItemClick}\n          as = {NavLink}\n          to = '/Artist-Dashboard' \n        >\n          Artist Dashboard\n        </Menu.Item> */}\n      </Menu>\n    )\n  }\n}","import Web3 from \"web3\";\n//REMOVED WINDOW EVENT LISTNER - CONFLICTS W/ REACT ROUTER\nconst getWeb3 = () =>\n  new Promise(async(resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    // window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    // });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react'\n// import { Grid } from 'semantic-ui-react';\n// import ImageMcCoy from './ImageMcCoy';\nimport McCoyContract from \"../contracts/McCoyContract.json\";\nimport getWeb3 from \"../utils/getWeb3\";\nclass Header extends Component{\n    state = { instance: undefined, contractAddress: null, \n    tokenName:null, tokenSymbol:null,\n    web3: null, accounts: null, contract: null };\n\n      componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = McCoyContract.networks[networkId];\n\n      const instance = new web3.eth.Contract(\n        McCoyContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      this.setState({instance});\n      console.log(\"McCoyContract instance..\",this.state.instance);\n      const contractAddress = await instance.options.address;\n      // const name = await instance.methods.name.call();\n      // console.log('name', name);\n      this.setState({contractAddress});\n      console.log(\"contractAddress...\",this.state.contractAddress);\n     \n      instance.methods.name().call({from: accounts[0]}, (error, tokenName) => \n        {\n          console.log(error, tokenName);\n          this.setState({tokenName});\n        });\n\n        instance.methods.symbol().call({from: accounts[0]}, (error, tokenSymbol) => \n        {\n          console.log(error, tokenSymbol);\n          this.setState({tokenSymbol});\n        });\n\n        instance.methods.totalSupply().call({from: accounts[0]}, (error, result) =>\n        {\n         //had to add resutl.toString() - all of sudden got bigNumber errors in react\n          const allTokens = result.toString(10);\n          console.log(error, allTokens);\n          this.setState({allTokens});\n        });\n        \n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `\n        Check your MetaMask account connection.\n\n        This site requires MetaMask or another Ethereum wallet to enjoy to its fullest.\n       \n        If you need to install the MetaMask plugin go to : \n        https://metamask.io/\n\n        Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"token-info-container\">\n        <h2 className=\"info-field mccoy-text\">Public Key / Private Key <span className=\"by-mccoys\">by Jennifer & Kevin McCoy</span></h2>\n        <h4 className=\"info-field eth-addr\"><span className=\"info-title\">Contract Address:</span> <span>0xD70e079DaE4dc3c40519fBe568bC3FB70E1dD87e</span></h4>\n        <h4 className=\"info-field\"><span className=\"info-title\">Token Name:</span> {this.state.tokenName} </h4>\n        <h4 className=\"info-field\"><span className=\"info-title\">Token Symbol:</span> {this.state.tokenSymbol}</h4>\n        <h4 className=\"info-field\"><span className=\"info-title\">Total Supply:</span> {this.state.allTokens} tokens</h4>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n\n\n","import React from 'react';\n\nconst TopHeader = () => {\n  return (\n    <header>\n      <h1>\n        <span className=\"mccoy-text\">Public Key / Private Key BY Jennifer & Keven McCoy\n          <span className=\"powered-by\"><span className=\"by\">smart contracts by</span> <img src=\"./ol-logo-full.png\" alt=\"OpenLaw\" /></span></span>\n        <span className=\"whitney-text\">Whitney Museum of American Art</span>\n      </h1>\n    </header>\n  );\n};\n\nexport default TopHeader;","import React from 'react'\nimport { Image } from 'semantic-ui-react'\n\nconst ImageMcCoy = () => (\n        <Image \n        src={require('./mccoy-film-crop.png')}\n        href='https://whitney.org/exhibitions/public-key-private-key'\n        target = '_blank'\n        />\n)\n\nexport default ImageMcCoy\n","import React, { Component } from \"react\";\nimport { Button, Form, Segment, Message,Input } from 'semantic-ui-react'\nimport McCoyContract from \"../contracts/McCoyContract.json\";\nimport getWeb3 from \"../utils/getWeb3\";\n\nclass TransferTokenForm extends Component {\n\n    state = {\n    instance: null,\n    web3:null,\n    accounts: '', \n    tokenId: '',\n    currentEthereumAddress: '',\n    newEthereumAddress:'',\n    loading: false, \n    errorMessage:'',\n    successMessage: ''\n   };\n\n   transferToken = async(event)=>{\n \n    this.setState({loading: true, errorMessage:'', successMessage:''});\n    event.preventDefault();\n      try{\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        console.log('transfer from accounts..',accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = McCoyContract.networks[networkId];\n\n        const instance = new web3.eth.Contract(\n          McCoyContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        this.setState({accounts, web3,instance})\n       await instance.methods.safeTransferFrom(this.state.currentEthereumAddress, this.state.newEthereumAddress, this.state.tokenId)\n        .send({\n          from: accounts[0]\n        });\n        this.setState({successMessage: 'token transfered'});\n      }\n      catch(error) {\n        this.setState({errorMessage:error.message});\n      }\n      \n        this.setState({loading:false});\n   }\n\n   render() {\n    return(\n        <Segment color='orange'>\n          <h2 className=\"content-heading\">Transfer Donor Token</h2>\n          <p className=\"additional-text\">Transfer your Token to a new \"Donor of Record\"</p>\n          <Form onSubmit = {this.transferToken}\n              error = {!!this.state.errorMessage}\n              success={!!this.state.successMessage}\n              loading = {this.state.loading}\n          >\n          <Message error header = 'Token Transfer failed' content = {this.state.errorMessage}/>\n          <Message success header = 'Token Transfered' content={this.state.successMessage} />\n           \n            <Form.Field>\n              <label>My Ethereum Address</label>\n              <Input placeholder='Current Ethereum Address' \n                value = {this.state.currentEthereumAddress}\n                onChange = {event => this.setState({currentEthereumAddress: event.target.value})}\n                required />\n            </Form.Field>\n            <Form.Field>\n              <label>New Donor Ethereum Address</label>\n              <Input placeholder='New Donor Ethereum Address' \n                value = {this.state.newEthereumAddress}\n                onChange = {event => this.setState({newEthereumAddress: event.target.value})}\n              required />\n            </Form.Field>\n            <Form.Field>\n            <label>Token Id Number</label>\n              <Input placeholder = 'Token Id #'\n              value = {this.state.tokenId}\n              onChange = {event => this.setState({tokenId: event.target.value})}  \n              required/>\n            </Form.Field>\n            \n            <Button type='submit' primary>Transfer Token </Button>\n          </Form>\n        </Segment>\n      )\n   }\n}\n\nexport default TransferTokenForm","import React, { Component } from 'react'\nimport { Container }from 'semantic-ui-react';\nimport TransferTokenForm from '../components/TransferToken';\nclass TransferDonorPage extends Component {\n\trender() {\n\t\treturn(\n\t\t<Container>\n\t\t\t{/* <h2>Transfer your Token to a new \"Donor of Record\"</h2> */}\n\t\t\t<TransferTokenForm/>\n\n\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default TransferDonorPage;","import React, { Component } from \"react\";\nimport McCoyContract from \"../contracts/McCoyContract.json\";\nimport getWeb3 from \"../utils/getWeb3\";\nimport { Card, Container, Button } from 'semantic-ui-react'\n\nclass TokenCards extends Component {\n  state = {\n    instance: null, \n    web3: null, \n    accounts:'',\n    tokenId:'',\n    allTokens:null, \n    myTokenList:[], \n    tokenItems:null\n  }\n\ncomponentDidMount = async () => {\n  await this.getTotalSupply();\n  this.updateCards();\n\n}\n\nupdateCards = async(event)=>{\n  console.log('updating cards..');\n  try{\n      //connect to web3 and contract instance \n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        //console.log('update cards from ..',accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = McCoyContract.networks[networkId];\n\n        const instance = new web3.eth.Contract(\n          McCoyContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n        this.setState({accounts, web3, instance});\n\n    //Loop over token index and get the token Ids to make array of tokenIds\n    //a counter variable\n      var i;\n      //get total supply of all tokenIDs that exist \n      let tokenSupply =  this.state.allTokens;\n      //array to used to collect tokenId, owner address, and metadata\n       const myTokenList = [];\n   \n      for(i=0; i < tokenSupply; i++) {\n        //get the tokenId from the index #\n        let tokenId = await instance.methods.tokenByIndex(i).call({from: accounts[0]}, (error, result) =>{\n         // const tokenId = result.toString(10);\n         //console.log(error, result.toString(10));\n          return result.toString(10);\n        }); //tokenByIndex call\n\n        //use the tokenId to get its owner's Eth address\n        let ownerAddress = await instance.methods.ownerOf(tokenId).call({from:accounts[0]}, (error, result) =>{\n          //console.log(error, \"eth..\"+ result);\n          return result.toString();\n        })\n         //use the tokenId to get its Metadata\n       let tokenMetadata = await instance.methods.tokenURI(tokenId).call({from:accounts[0]}, (error, result) =>{\n          //console.log(error, \"\")\n          return result;\n        })\n       //push values into myTokenList array\n        myTokenList.push({\n          key:i,\n          tokenid: tokenId.toString(10),\n          tokenuri: tokenMetadata,\n          owneraddress: ownerAddress\n        });\n      }//for loop\n        //this.setState({myTokenList});\n      console.log('the array index to tokenId..', myTokenList);\n     //map array to an element\n      const listItems = myTokenList.map((tokens)=>\n        <Card key={tokens.key} raised = {true}>\n          <Card.Content textAlign = 'left'>\n          <Card.Header>Token ID: {tokens.tokenid}</Card.Header>\n            <Card.Description><strong>Message:</strong> {tokens.tokenuri}</Card.Description>\n            <Card.Description><strong>Owner:</strong> <span className=\"owner-addr\">{tokens.owneraddress}</span></Card.Description>\n            <Button basic color='purple'> <a href = {'https://rinkeby.etherscan.io/token/0x504dba74322ced2a1f32f460fa92882b746064e5?a='+ tokens.tokenid} \n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n          >Token History</a></Button>\n          </Card.Content>\n        </Card>  \n      )\n      this.setState({listItems});\n       \n  } //try\n  catch(error){\n    console.log('error updating cards', error)\n  }\n}//updateCards\n\ngetTotalSupply= async(event)=>{\n  try{\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        //console.log('update cards from ..',accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = McCoyContract.networks[networkId];\n\n        const instance = new web3.eth.Contract(\n          McCoyContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        instance.methods.totalSupply().call({from: accounts[0]}, (error, result) =>\n        {\n         //had to add resutl.toString() - all of sudden got bigNumber errors in react\n          const allTokens = result.toString(10);\n          //console.log(error, \"totalSupply...\"+ allTokens);\n          this.setState({allTokens});\n\n         console.log(\"totalSupply2..\" + this.state.allTokens);\n        });\n  } catch(error){console.log('get token metadata error', error)}\n}//getOwnerAddress\n\n  render() {\n    return (\n      <Container>\n        <h2 className=\"content-heading\">Token List</h2>\n        <div className=\"token-tracker-list\">\n          <Card.Group itemsPerRow={1}>{this.state.listItems}</Card.Group>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default TokenCards","import React, { Component } from 'react'\nimport { Container }from 'semantic-ui-react';\n\nimport TokenCards from '../components/tokenCards';\nclass LandingPage extends Component {\n\trender() {\n\t\treturn(\n\t\t<Container>\n\t\t\t<TokenCards/>\n\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default LandingPage;","import React, { Component } from \"react\";\nimport { Button, Form, Segment, Message,Input } from 'semantic-ui-react'\nimport McCoyContract from \"../contracts/McCoyContract.json\";\nimport getWeb3 from \"../utils/getWeb3\";\n//const Web3 = require(\"web3\");\nclass MintToken extends Component {\n\n  state = {\n    instance: null,\n    web3:null,\n    accounts: '', \n    tokenId: '',\n    metaData: '',\n    loading: false, \n    errorMessage:'',\n    successMessage: ''\n   };\n\n  mintToken = async (event)=> {\n   \n    this.setState({loading: true, errorMessage:'', successMessage:''});\n    event.preventDefault();\n    \n    try{\n          const web3 = await getWeb3();\n          const accounts = await web3.eth.getAccounts();\n          console.log('transfer from accounts..',accounts[0]);\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = McCoyContract.networks[networkId];\n\n          const instance = new web3.eth.Contract(\n            McCoyContract.abi,\n            deployedNetwork && deployedNetwork.address,\n          );\n\n          this.setState({accounts, web3,instance})\n     \n          await instance.methods.createMcCoyToken(\n          this.state.metaData, this.state.tokenId)\n            .send({from: accounts[0]\n          });\n          this.setState({successMessage: 'ART Token Created!'});\n    } //try\n    catch(error) {\n      this.setState({errorMessage:error.message});\n    } \n     \n      this.setState({loading:false});     \n  }; //mintToken\n\n  render() {\n\n    return (\n      <Segment color = 'teal'>\n      <h2 className=\"content-heading\">Mint New Token</h2>\n      <Form onSubmit = {this.mintToken}\n            success={!!this.state.successMessage}\n            error={!!this.state.errorMessage}\n            loading = {this.state.loading}\n            >\n        <Message error header='Error:Address not authorized to mint' content={this.state.errorMessage} />\n        <Message success header='Complete' content={this.state.successMessage} />\n       \n        <Form.Field>\n          <label>Meta Data to Include</label>\n          <Input placeholder='some string' \n            value = {this.state.metaData}\n            onChange = {event => this.setState({metaData: event.target.value})}\n            required />\n        </Form.Field>\n        \n        <Form.Field>\n          <label>Add Token ID Number</label>\n          <Input placeholder='Token Number'\n          value = {this.state.tokenId}\n          onChange = {event => this.setState({tokenId: event.target.value})}\n          required />\n        </Form.Field>\n\n        <Button className=\"ui button primary\" type='submit'>Mint Token</Button>\n      </Form>\n      </Segment>\n\n    )\n  }\n}\n\nexport default MintToken","import React, { Component } from \"react\";\nimport { Button, Form, Segment, Message, Input } from 'semantic-ui-react'\nimport McCoyContract from \"../contracts/McCoyContract.json\";\nimport getWeb3 from \"../utils/getWeb3\";\n\n\nclass AllowSpender extends Component {\n\n    state = {\n    instance: null,\n    web3:null,\n    accounts: '', \n    tokenId: '',\n    spenderEthereumAddress: '',\n    loading: false, \n    errorMessage:'',\n    successMessage: ''\n   };\n\nallowTokenSpender = async (event) => {\n    \n    this.setState({loading: true, errorMessage:'', successMessage:''});\n    event.preventDefault();\n\n    try { \n\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = McCoyContract.networks[networkId];\n\n        const instance = new web3.eth.Contract(\n          McCoyContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        this.setState({accounts, web3,instance});\n        \n      await instance.methods.approve(this.state.spenderEthereumAddress,this.state.tokenId)\n      .send({\n        from: accounts[0]\n      })\n         this.setState({successMessage: 'Spender is authorized'});\n    }//try\n    catch(error) {   \n      this.setState({errorMessage: error.message});\n    }\n\n    this.setState({loading:false});\n  };// allowTokenSpender \n\nrender() {\n  return(\n <Segment color = 'yellow'>\n <h2 className=\"content-heading\">Authorize Spender Ethereum Address</h2>\n  <Form onSubmit = {this.allowTokenSpender}\n      success={!!this.state.successMessage}\n      error = {!!this.state.errorMessage}\n      loading = {this.state.loading}\n  >\n  <Message error header = 'Spender has not been authorized' content = {this.state.errorMessage}/>\n  <Message success header = 'Spender Authorized' content={this.state.successMessage} />\n    \n    <Form.Field>\n      <label>Token Id</label>\n      <Input placeholder='Token ID'\n        value = {this.state.tokenId}\n        onChange = {event => this.setState({tokenId: event.target.value})}\n       required/>\n    </Form.Field>\n    <Form.Field>\n      <label>Ethereum Address of Spender</label>\n      <Input placeholder='Ethereum Address of Spender' \n        value = {this.state.spenderEthereumAddress}\n        onChange = {event => this.setState({spenderEthereumAddress: event.target.value})}\n        required />\n    </Form.Field>\n\n    <Button className=\"ui button primary\" type ='submit'>Allow Spender</Button>\n  </Form>\n  </Segment>\n\n  )\n}\n\n}\nexport default AllowSpender","import React, { Component } from 'react'\nimport { Container, Divider }from 'semantic-ui-react';\nimport MintToken from '../components/MintToken';\nimport TransferTokenForm from '../components/TransferToken';\nimport AllowSpender from '../components/AllowSpender';\n\nclass ArtistDashboardPage extends Component {\n\trender() {\n\t\treturn(\n\t\t<Container>\n\t\t\t<h2 className=\"section-heading\">Artist Dashboard</h2>\n\t\t\t\n\t\t\t<MintToken/>\n\t\t\t\n\t\t\t <Divider hidden/>\n\t\t\t \n\t\t\t<TransferTokenForm/>\n\t\t\t\n\t\t\t<Divider hidden/>\n\t\t\t\n\t\t\t<AllowSpender/>\n\t\t\t\n\t\t\t<Divider/>\n\t\n\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default ArtistDashboardPage;","import React, { Component } from 'react'\nimport { Container}from 'semantic-ui-react';\n\nclass NoMatch extends Component {\n\trender() {\n\t\treturn(\n\t\t<Container>\n\t\t\t<h1>Page Does Not Exist</h1>\n\n\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default NoMatch;","import React, { Component } from \"react\";\nimport { Container, Grid } from 'semantic-ui-react';\n//Components\nimport MenuBar from './components/MenuBar';\nimport Header from './components/Header';\nimport TopHeader from './components/TopHeader';\nimport ImageMcCoy from './components/ImageMcCoy';\n//Pages\nimport TransferDonorPage from './pages/TransferDonorPage';\nimport LandingPage from './pages/LandingPage';\nimport ArtistDashboardPage from './pages/ArtistDashboardPage';\nimport NoMatch from './pages/NoMatch';\n//Router\nimport { Switch, Route, withRouter } from 'react-router-dom';\n//CSS\nimport \"./App.css\";\nimport \"./whitney.css\";\n\nclass App extends Component {\n  state = {web3:null}\n\n  render() {\n      \n    return (\n      <div className=\"App whitney\">\n        <TopHeader />\n\n        <Container>\n          <MenuBar/>\n\n          <Grid columns={2} divided >\n            <Grid.Row> \n              <Grid.Column width={10} className=\"landing-img\">\n                <ImageMcCoy/>\n              </Grid.Column>\n              <Grid.Column width={6} textAlign='left'>\n\n                  <Header/>\n              \n                  <div className=\"page-content-container\">\n                    <Switch>\n                      <Route exact path='/' component={LandingPage}></Route>\n                      <Route exact path='/Transfer-Donor' component={TransferDonorPage}></Route>\n                      \n                      <Route exact path='/Artist-Dashboard' component={ArtistDashboardPage}></Route>\n                       <Route component={NoMatch} />\n                    </Switch>\n                  </div>\n\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}